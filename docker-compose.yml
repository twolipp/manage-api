services:
  db:
    image: postgres:14-alpine
    ports:
      - "5431:5432"

    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}

    volumes:
      - postgresql:/var/lib/postgresql/data/

    networks:
      custom_network:
        aliases:
          - ${PROJECT_NAME}_db.local
  redis:
    restart: unless-stopped
    image: redis:7.0.5-alpine
    expose:
      - 6379

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile

    ports:
      - "3000:3000"

    volumes:
      - ./frontend:/app/frontend
      - node_modules:/app/frontend/node_modules

    depends_on:
      - backend

    networks:
      custom_network:
        aliases:
          - ${PROJECT_NAME}_react.local

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: .env
    container_name: backend

    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - DATABASE_HOST=db

    ports:
      - "8000:8000"

    volumes:
      - ./backend:/app/backend
      - ./backend:/app/backend/api
      - ./static:/app/backend/static

    depends_on:
      - db

    networks:
      custom_network:
        aliases:
          - ${PROJECT_NAME}_django.local

networks:
  custom_network:
    name: ${PROJECT_NAME}
    driver: bridge

volumes:
  node_modules:
    driver: local
  postgresql:
    driver: local
