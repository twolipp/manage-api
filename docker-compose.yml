services:
  db:
    image: postgres:14-alpine
    container_name: db

    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=manage-api

    volumes:
      - postgresql:/var/lib/postgresql/data/

  pgadmin:
    container_name: pgadmin4_container2
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: secret
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  # redis:
  #   container_name: redis
  #   restart: unless-stopped
  #   image: redis:7.0.5-alpine

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /manage-api/frontend
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json

    ports:
      - "3000:3000"

    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: .env
    container_name: backend

    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app/backend
        - action: rebuild
          path: requirements.txt

    command: python manage.py runserver 0.0.0.0:8000

    ports:
      - "8000:8000"

    depends_on:
      - db

volumes:
  node_modules:
    driver: local
  postgresql:
    driver: local
  pgadmin-data:
    driver: local
